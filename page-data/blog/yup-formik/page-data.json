{"componentChunkName":"component---src-templates-blog-js","path":"/blog/yup-formik","result":{"data":{"contentfulBlogpost":{"title":"Yup and formik tutorial","images":null,"body":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Don't overcomplicate forms (Reactjs).\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-1\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"While I was working on a project where I needed dynamic switches between forms and having them validated. I was thinking to myself, ok let us see what's a good way to validate the form and I stumbled upon yup. While it has a simple and cute name under the hood it's super fast and well built. It was perfect now I could have written the validation on my own but that would come at a cost of time witch I didn't have, and also more code. After that, I was searching for a good form helper and stumbled uponÂ \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"Formik.  \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"What separates formik from the rest of the helpers is the \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"performance\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"( small library ) and how it handles the \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"annoying parts \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"of building a form component (Handling form submission,validation and error messages, getting values in and out of form state )\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"To install Formik and yup\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"NPM\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\" npm install formik --save\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\" npm install yup --save\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Getting started\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"First, we need to import formik in our form component specifically we are gonna use a custom hook from formik called \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"useFormik\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\". It will return all states and helpers directly, If your trying to access the formik state via context , use useFormikContext , also don't use <Formik> or withFormik with \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"useFormik() \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\".\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Now while we are at it, I will describe the form state in few words. The data we are receiving is for products that can be either book, furniture, or CD. The rest of the state goes as follows :\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"SKU\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" (the stock-keeping unit)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"Price\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"(the price of a product)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"Values \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"(size or weight of the product )\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"Type \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"(type of product e.g furniture, DVD or book)\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"function Form() {\\n  const formik = useFormik({\\n    initialValues: {\\n      item_sku: \\\"\\\",\\n      item_price: 0,\\n      item_product_type: \\\"DVD\\\",\\n      item_product: 0,\\n      item_product_h: 0,\\n      item_product_w: 0,\\n      item_product_l: 0,\\n      isFurniture: false\\n    },\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"    \\n\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"Now the first part of the code is the initial value or state of the form the one oddity is the \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"isFurniture\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"  (which I will explain in the next section ).\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Building the yup schema \",\"nodeType\":\"text\"}],\"nodeType\":\"heading-3\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Now its time to build the schema we are gonna use with formik validation \",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"export const ProductSchema = yup.object().shape({\\n\\titem_sku: yup.string().required().max(6).min(6).matches(/(?=\\\\S*[A-Z])(?=\\\\S*\\\\d)[A-Z\\\\d]{6,}/, \\\"Must contain upper cases and least one letter and number and no spaces\\\"),\\n\\tisFurniture: yup.boolean(),\\n\\titem_price: yup\\n\\t\\t.number()\\n\\t\\t.required()\\n\\t\\t.positive(),\\n\\titem_product_type: yup.string().required(\\\"Required\\\"),\\n\\n\\titem_product: yup.number().when('isFurniture', {\\n\\t\\tis: false,\\n\\t\\tthen: yup.number().positive().integer().required(),\\n\\t\\totherwise: yup.number(),\\n\\t}),\\n\\n\\n\\titem_product_h: yup.number().when('isFurniture', {\\n\\t\\tis: true,\\n\\t\\tthen: yup.number().positive().integer().required(),\\n\\t\\totherwise: yup.number(),\\n\\t}),\\n\\n\\titem_product_w: yup.number().when('isFurniture', {\\n\\t\\tis: true,\\n\\t\\tthen: yup.number().positive().integer().required(),\\n\\t\\totherwise: yup.number(),\\n\\t}),\\n\\n\\n\\titem_product_l: yup.number().when('isFurniture', {\\n\\t\\tis: true,\\n\\t\\tthen: yup.number().positive().integer().required(),\\n\\t\\totherwise: yup.number(),\\n\\t}),\\n\\n\\n});\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Now here is where the stuff gets interesting , this is where we set the data types and requirements for the validations .  Now, \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"isFurniture\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" is used as a boolean for triggering the type of value to be expected because we can't have furniture in MB. For this conditional validation, we used \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\".when() \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"and it accepts 2 parameters the name of the initial value(isFurniture) its checking, and object with specific rules.  \",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"is:true - is the condition in this example  \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"isFurniture===true \",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"},{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"then\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" and \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"otherwise\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" - is triggered when the condition is correct or false (you can think of it like try-catch or if-else  )\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"list-item\"}],\"nodeType\":\"unordered-list\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"const formik = useFormik({\\n    initialValues: {\\n      item_sku: \\\"\\\",\\n      item_price: 0,\\n      item_product_type: \\\"DVD\\\",\\n      item_product: 0,\\n      item_product_h: 0,\\n      item_product_w:0,\\n      item_product_l: 0,\\n      isFurniture: false,\\n    },\\n    validateOnChange: true,\\n    validationSchema: ProductSchema,\\n    onSubmit: (values) => {\\nalert(value);     \\n  }\\n)}\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Basically that is it now we add the \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"italic\"},{\"type\":\"bold\"}],\"value\":\"ProductSchema \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"we build and set \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"italic\"},{\"type\":\"bold\"}],\"value\":\"validateOnChange\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" to true so the schema is triggered on input or value change.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Now we pass the \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"formik\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\" value with the useFormik , and pass it down to a form e.g\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"   <FromComponent\\n        formik={formik}\\n      />\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"./FromComponent.js\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"export default function FromComponent({ formik }) {\\n  return (\\n    <div>\\n      <form onSubmit={formik.handleSubmit}>\\n        <div>\\n          <label>SKU</label>\\n          <input\\n            name=\\\"item_sku\\\"\\n            placeholder=\\\"1B1F25\\\"\\n            {...formik.getFieldProps(\\\"item_sku\\\")}\\n          />\\n          {formik.touched.item_sku && formik.errors.item_sku ? (\\n            <div>{formik.errors.item_sku}</div>\\n          ) : null}\\n        </div>\\n        <div>\\n          <label>Price</label>\\n          <input\\n            name=\\\"item_price\\\"\\n            type=\\\"number\\\"\\n            {...formik.getFieldProps(\\\"item_price\\\")}\\n          />\\n          {formik.touched.item_price && formik.errors.item_price ? (\\n            <div>{formik.errors.item_price}</div>\\n          ) : null}\\n        </div>\\n        <div>\\n          <label>Product type</label>\\n          <select\\n            name=\\\"item_product_type\\\"\\n            onChange={formik.handleChange}\\n            {...formik.getFieldProps(\\\"item_product_type\\\")}\\n          >\\n            <option value=\\\"DVD\\\">DVD</option>\\n            <option value=\\\"Book\\\">Book</option>\\n            <option value=\\\"Furniture\\\">Furniture</option>\\n          </select>\\n          {formik.values.item_product_type &&\\n          formik.errors.item_product_type ? (\\n            <div>{formik.errors.item_product_type}</div>\\n          ) : null}\\n        </div>\\n        {formik.values.item_product_type === \\\"DVD\\\" ? (\\n          <div>\\n            <label>Memory (mb)</label>\\n            <input\\n              name=\\\"item_product\\\"\\n              type=\\\"number\\\"\\n              {...formik.getFieldProps(\\\"item_product\\\")}\\n            />\\n            {formik.touched.item_product && formik.errors.item_product ? (\\n              <div>{formik.errors.item_product}</div>\\n            ) : null}\\n          </div>\\n        ) : null}\\n        {formik.values.item_product_type === \\\"Book\\\" ? (\\n          <div>\\n            <label>Size Book(kg)</label>\\n            <input\\n              name=\\\"item_product\\\"\\n              type=\\\"number\\\"\\n              {...formik.getFieldProps(\\\"item_product\\\")}\\n            />\\n            {formik.touched.item_product && formik.errors.item_product ? (\\n              <div>{formik.errors.item_product}</div>\\n            ) : null}\\n          </div>\\n        ) : null}\\n\\t\\t {formik.values.item_product_type === \\\"Furniture\\\" ? (\\n          <div>\\n            <div>\\n              <label>Height(CM)</label>\\n              <input\\n                name=\\\"item_product_h\\\"\\n                type=\\\"number\\\"\\n                {...formik.getFieldProps(\\\"item_product_h\\\")}\\n              />\\n              {formik.touched.item_product_h && formik.errors.item_product_h ? (\\n                <div>{formik.errors.item_product_h}</div>\\n              ) : null}\\n            </div>\\n            <div>\\n              <label>Width(CM)</label>\\n              <input\\n                name=\\\"item_product_w\\\"\\n                type=\\\"number\\\"\\n                {...formik.getFieldProps(\\\"item_product_w\\\")}\\n              />\\n              {formik.touched.item_product_w && formik.errors.item_product_w ? (\\n                <div>{formik.errors.item_product_w}</div>\\n              ) : null}\\n            </div>\\n            <div>\\n              <label>Lenght(CM)</label>\\n              <input\\n                name=\\\"item_product_l\\\"\\n                type=\\\"number\\\"\\n                {...formik.getFieldProps(\\\"item_product_l\\\")}\\n              />\\n              {formik.touched.item_product_l && formik.errors.item_product_l ? (\\n                <div>{formik.errors.item_product_l}</div>\\n              ) : null}\\n            </div>\\n          </div>\\n        ) : null}\\n        <input className=\\\"submitButton\\\" type=\\\"submit\\\" />\\n      </form>\\n    </div>\\n  );\\n}\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"There is a whole lot of stuff to unpack ...not really, first and foremost we need to add \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"formik.onSubmit \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\"in <form> element. After that, we need to reference the formik props by using \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"formik\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"code\"},{\"type\":\"bold\"}],\"value\":\".\",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"getFieldProps(value name) \",\"nodeType\":\"text\"},{\"data\":{},\"marks\":[],\"value\":\".\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"For error handling and popups we add shorthand conditional e.g:\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"{formik.touched.item_product_l && formik.errors.item_product_l ? (\\n                <div>{formik.errors.item_product_l}</div>\\n              ) : null}\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"OK but how about the dynamic rendering of value type?\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"code\"}],\"value\":\"  useEffect(() => {\\n    if (formik.values.item_product_type === \\\"DVD\\\") {\\n      formik.resetForm();\\n      formik.setFieldValue(\\\"isFurniture\\\", false);\\n      formik.setFieldValue(\\\"item_product_type\\\", \\\"DVD\\\");\\n    } else if (formik.values.item_product_type === \\\"Book\\\") {\\n      formik.resetForm();\\n      formik.setFieldValue(\\\"isFurniture\\\", false);\\n      formik.setFieldValue(\\\"item_product_type\\\", \\\"Book\\\");\\n    } else if (formik.values.item_product_type === \\\"Furniture\\\") {\\n      formik.resetForm();\\n      formik.setFieldValue(\\\"isFurniture\\\", true);\\n      formik.setFieldValue(\\\"item_product_type\\\", \\\"Furniture\\\");\\n    }\\n  }, [formik.values.item_product_type]);\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"And Bobs your uncle it works, the code is live on \",\"nodeType\":\"text\"},{\"data\":{\"uri\":\"https://codesandbox.io/s/react-formik-yup-4uogc?file=/src/Component/Form/index.js:608-1257\"},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"Sandbox\",\"nodeType\":\"text\"}],\"nodeType\":\"hyperlink\"},{\"data\":{},\"marks\":[],\"value\":\". If you have any information message me on twitter or Email  \\n \",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}","references":[]}}},"pageContext":{"slug":"yup-formik"}},"staticQueryHashes":[]}