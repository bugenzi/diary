{"componentChunkName":"component---src-templates-blog-js","path":"/blog/yup-formik","result":{"data":{"contentfulBlogpost":{"title":"Yup and formik tutoria","images":null,"body":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"heading-1\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Don't overcomplicate forms , simple is easy.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"While I was working on a project where I needed dynamic switches between forms and having them validated. I was thinking to myself, ok let us see what's a good way to validate the form and I stumbled upon yup. While it has a simple and cute name under the hood it's super fast and well built. It was perfect now I could have written the validation on my own but that would come at a cost of time witch I didn't have, and also more code. After that, I was searching for a good form helper and stumbled uponÂ \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Formik.  \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"What seperates formik from the rest of the helpers is the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"performance\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"( small library ) and how it handles the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"annoying parts \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"of building a form component (Handling form submission,validation and error messages, getting values in and out of form state )\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-2\",\"content\":[{\"nodeType\":\"text\",\"value\":\"To install Formik and yup\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"NPM\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\" npm install formik --save\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\" npm install yup --save\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-2\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Getting started\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"First, we need to import formik in our form component specifically we are gonna use a custom hook from formik called \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"useFormik\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". It will return all states and helpers directly, If your trying to access the formik state via context , use useFormikContext , also don't use <Formik> or withFormik with \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"useFormik() \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Now while we are at it, I will describe the form state in few words. The data we are receiving is for products that can be either books, furniture or CDs . The rest of the state goes as follows :\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"unordered-list\",\"content\":[{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"SKU\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" (the stock-keeping unit)\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Price\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"(the price of a product)\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Values \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"(size or weight of the product )\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Type \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"(type of product e.g furniture, DVD or book)\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"function Form() {\\n  const formik = useFormik({\\n    initialValues: {\\n      item_sku: \\\"\\\",\\n      item_price: 0,\\n      item_product_type: \\\"DVD\\\",\\n      item_product: 0,\\n      item_product_h: 0,\\n      item_product_w: 0,\\n      item_product_l: 0,\\n      isFurniture: false\\n    },\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"    \\n\",\"marks\":[{\"type\":\"code\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Now the first part of the code is the initial value or state of the form the one oddity is the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"isFurniture\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"  (which I will explain in the next section ).\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Building the yup schema \",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Now its time to build the schema we are gonna use with formik validation \",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"export const ProductSchema = yup.object().shape({\\n\\titem_sku: yup.string().required().max(6).min(6).matches(/(?=\\\\S*[A-Z])(?=\\\\S*\\\\d)[A-Z\\\\d]{6,}/, \\\"Must contain upper cases and least one letter and number and no spaces\\\"),\\n\\tisFurniture: yup.boolean(),\\n\\titem_price: yup\\n\\t\\t.number()\\n\\t\\t.required()\\n\\t\\t.positive(),\\n\\titem_product_type: yup.string().required(\\\"Required\\\"),\\n\\n\\titem_product: yup.number().when('isFurniture', {\\n\\t\\tis: false,\\n\\t\\tthen: yup.number().positive().integer().required(),\\n\\t\\totherwise: yup.number(),\\n\\t}),\\n\\n\\n\\titem_product_h: yup.number().when('isFurniture', {\\n\\t\\tis: true,\\n\\t\\tthen: yup.number().positive().integer().required(),\\n\\t\\totherwise: yup.number(),\\n\\t}),\\n\\n\\titem_product_w: yup.number().when('isFurniture', {\\n\\t\\tis: true,\\n\\t\\tthen: yup.number().positive().integer().required(),\\n\\t\\totherwise: yup.number(),\\n\\t}),\\n\\n\\n\\titem_product_l: yup.number().when('isFurniture', {\\n\\t\\tis: true,\\n\\t\\tthen: yup.number().positive().integer().required(),\\n\\t\\totherwise: yup.number(),\\n\\t}),\\n\\n\\n});\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Now here is where the stuff gets interesting , this is where we set the data types and requirements for the validations .  Now, \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"isFurniture\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" is used as a boolean for triggering the type of value to be expected because we can't have furniture in MB. For this conditional validation, we used \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".when() \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"and it accepts 2 parameters the name of the initial value(isFurniture) its checking, and object with specific rules.  \",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"unordered-list\",\"content\":[{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"is:true - is the condition in this example  \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"isFurniture===true \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"then\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" and \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"otherwise\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" - is triggered when the condition is correct or false (you can think of it like try-catch or if-else  )\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"const formik = useFormik({\\n    initialValues: {\\n      item_sku: \\\"\\\",\\n      item_price: 0,\\n      item_product_type: \\\"DVD\\\",\\n      item_product: 0,\\n      item_product_h: 0,\\n      item_product_w:0,\\n      item_product_l: 0,\\n      isFurniture: false,\\n    },\\n    validateOnChange: true,\\n    validationSchema: ProductSchema,\\n    onSubmit: (values) => {\\nalert(value);     \\n  }\\n)}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Basically that is it now we add the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"ProductSchema \",\"marks\":[{\"type\":\"italic\"},{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"we build and set \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"validateOnChange\",\"marks\":[{\"type\":\"italic\"},{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" to true so the schema is triggered on input or value change.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Now we pass the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"formik\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" value with the useFormik , and pass it down to a form e.g\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"   <FromComponent\\n        formik={formik}\\n      />\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"./FromComponent.js\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"export default function FromComponent({ formik }) {\\n  return (\\n    <div>\\n      <form onSubmit={formik.handleSubmit}>\\n        <div>\\n          <label>SKU</label>\\n          <input\\n            name=\\\"item_sku\\\"\\n            placeholder=\\\"1B1F25\\\"\\n            {...formik.getFieldProps(\\\"item_sku\\\")}\\n          />\\n          {formik.touched.item_sku && formik.errors.item_sku ? (\\n            <div>{formik.errors.item_sku}</div>\\n          ) : null}\\n        </div>\\n        <div>\\n          <label>Price</label>\\n          <input\\n            name=\\\"item_price\\\"\\n            type=\\\"number\\\"\\n            {...formik.getFieldProps(\\\"item_price\\\")}\\n          />\\n          {formik.touched.item_price && formik.errors.item_price ? (\\n            <div>{formik.errors.item_price}</div>\\n          ) : null}\\n        </div>\\n        <div>\\n          <label>Product type</label>\\n          <select\\n            name=\\\"item_product_type\\\"\\n            onChange={formik.handleChange}\\n            {...formik.getFieldProps(\\\"item_product_type\\\")}\\n          >\\n            <option value=\\\"DVD\\\">DVD</option>\\n            <option value=\\\"Book\\\">Book</option>\\n            <option value=\\\"Furniture\\\">Furniture</option>\\n          </select>\\n          {formik.values.item_product_type &&\\n          formik.errors.item_product_type ? (\\n            <div>{formik.errors.item_product_type}</div>\\n          ) : null}\\n        </div>\\n        {formik.values.item_product_type === \\\"DVD\\\" ? (\\n          <div>\\n            <label>Memory (mb)</label>\\n            <input\\n              name=\\\"item_product\\\"\\n              type=\\\"number\\\"\\n              {...formik.getFieldProps(\\\"item_product\\\")}\\n            />\\n            {formik.touched.item_product && formik.errors.item_product ? (\\n              <div>{formik.errors.item_product}</div>\\n            ) : null}\\n          </div>\\n        ) : null}\\n        {formik.values.item_product_type === \\\"Book\\\" ? (\\n          <div>\\n            <label>Size Book(kg)</label>\\n            <input\\n              name=\\\"item_product\\\"\\n              type=\\\"number\\\"\\n              {...formik.getFieldProps(\\\"item_product\\\")}\\n            />\\n            {formik.touched.item_product && formik.errors.item_product ? (\\n              <div>{formik.errors.item_product}</div>\\n            ) : null}\\n          </div>\\n        ) : null}\\n\\t\\t {formik.values.item_product_type === \\\"Furniture\\\" ? (\\n          <div>\\n            <div>\\n              <label>Height(CM)</label>\\n              <input\\n                name=\\\"item_product_h\\\"\\n                type=\\\"number\\\"\\n                {...formik.getFieldProps(\\\"item_product_h\\\")}\\n              />\\n              {formik.touched.item_product_h && formik.errors.item_product_h ? (\\n                <div>{formik.errors.item_product_h}</div>\\n              ) : null}\\n            </div>\\n            <div>\\n              <label>Width(CM)</label>\\n              <input\\n                name=\\\"item_product_w\\\"\\n                type=\\\"number\\\"\\n                {...formik.getFieldProps(\\\"item_product_w\\\")}\\n              />\\n              {formik.touched.item_product_w && formik.errors.item_product_w ? (\\n                <div>{formik.errors.item_product_w}</div>\\n              ) : null}\\n            </div>\\n            <div>\\n              <label>Lenght(CM)</label>\\n              <input\\n                name=\\\"item_product_l\\\"\\n                type=\\\"number\\\"\\n                {...formik.getFieldProps(\\\"item_product_l\\\")}\\n              />\\n              {formik.touched.item_product_l && formik.errors.item_product_l ? (\\n                <div>{formik.errors.item_product_l}</div>\\n              ) : null}\\n            </div>\\n          </div>\\n        ) : null}\\n        <input className=\\\"submitButton\\\" type=\\\"submit\\\" />\\n      </form>\\n    </div>\\n  );\\n}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"There is a whole lot of stuff to unpack ...not really, first and foremost we need to add \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"formik.onSubmit \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"in <form> element. After that, we need to reference the formik props by using \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"formik\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[{\"type\":\"code\"},{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"getFieldProps(value name) \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"For error handling and popups we add shorthand conditional e.g:\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"{formik.touched.item_product_l && formik.errors.item_product_l ? (\\n                <div>{formik.errors.item_product_l}</div>\\n              ) : null}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"OK but how about the dynamic rendering of value type?\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"  useEffect(() => {\\n    if (formik.values.item_product_type === \\\"DVD\\\") {\\n      formik.resetForm();\\n      formik.setFieldValue(\\\"isFurniture\\\", false);\\n      formik.setFieldValue(\\\"item_product_type\\\", \\\"DVD\\\");\\n    } else if (formik.values.item_product_type === \\\"Book\\\") {\\n      formik.resetForm();\\n      formik.setFieldValue(\\\"isFurniture\\\", false);\\n      formik.setFieldValue(\\\"item_product_type\\\", \\\"Book\\\");\\n    } else if (formik.values.item_product_type === \\\"Furniture\\\") {\\n      formik.resetForm();\\n      formik.setFieldValue(\\\"isFurniture\\\", true);\\n      formik.setFieldValue(\\\"item_product_type\\\", \\\"Furniture\\\");\\n    }\\n  }, [formik.values.item_product_type]);\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"And Bobs your uncle it works, the code is live on \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Sandbox\",\"marks\":[],\"data\":{}}],\"data\":{\"uri\":\"https://codesandbox.io/s/react-formik-yup-4uogc?file=/src/Component/Form/index.js:608-1257\"}},{\"nodeType\":\"text\",\"value\":\". If you have any information message me on twitter or Email  \\n \",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\",\"marks\":[],\"data\":{}}],\"data\":{}}]}","references":[]}}},"pageContext":{"slug":"yup-formik"}},"staticQueryHashes":[]}